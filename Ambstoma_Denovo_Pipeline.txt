# De novo Ambystoma opacum Transcriptome Assembly Pipeline 

#---------------------------------------------------------------------------------
# Where the project stands right now:
#
# I've progressed through Matthew's "Alligator Denovo transcriptome assembly" past the assembly step. Generally 
# the QA metrics look pretty solid (N50s, BUSCO) but I've hit an impasse with a few things.  
# 
# Issue 1
# I have extremely high "non-concordance" when I allign the post trimmed reads back to my assembly with HiSAT2. (See step 5).  
# I've tried a few things. I've tried several ways of assembling the index or reformatting the input reads, unsuccessfully 
# This includes retiming the reads with different conditions and using a different trimming software (Genius' Trim with BBduck). 
# I also tried to take a newly published chromosomal axolotl genome and index it to see if the issue is with the reads or the 
# assembly. This resulted in an error that I believe to be due to an issue in the "index build" phase of HiSAT2. When I'm building
# the index, an issue occurs where a few of the indexes will have no information in them. I know it's just an issue with this specific
# because of I tried the same thing with a partial axolotl assembly and the indexes had no problems. 
# 
# Issue 2
# I've begun to use Trinotate to create annotations for the assembly but I have had a few issues before I stopped. I made the necessary
# databases of proteins for the assemblies (PFAM, HMMR, etc) but when I ran Trinotate it appears only the blast databases are being 
# successfully incorporated into the output files. Furthermore, it appears that I may have a lot of replicate in the sequences being annotated
# and how to best address this... I at least am unclear on. 






#---------------------------------------------------------------------------------
# Received RNA sequencing data from Emily B. in September. The following has been
# modified from the work of Matthew H., Samantha B., and Emily B. over the last few months.
# 7 sample transcripts were sent for sequencing, 2 failed although one was later resequenced. 
#
# Opacum samples 1,3, and 7 were female and 2, 4, 5, and 6 were male
#
#
#
#---------------------------------------------------------------------------------
# 
# Step 1: rCorrector
# rCorrector is an error correct program for RNA-seq reads on the Illumina platform. 
# rCorrector removes reads that are likely problematic (errors, low abundance). However rCorrector
# does reduce some of the data in this process (although not likely critical data). 
# Source code: https://github.com/mourisl/Rcorrector
# Below is an example of rCorrector script used on opacum 5 samples. 

#PBS -S /bin/bash
#PBS -q batch
#PBS -N rCorrector1.3test
#PBS -l nodes=1:ppn=1
#PBS -l walltime=48:00:00
#PBS -l mem=20gb


cd rCorrector_Output2

module load Rcorrector/1.0.2-foss-2016b

run_rcorrector.pl -1 /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L001_R1_001.fastq,/scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L002_R1_001.fastq,/scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L003_R1_001.fastq,/scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L004_R1_001.fastq -2 /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L001_R2_001.fastq,/scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L002_R2_001.fastq,/scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L003_R2_001.fastq,/scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/opacum-5_S16_L004_R2_001.fastq -t 4 > rCorrector_6.log

#
#
#---------------------------------------------------------------------------------
#
# Step 2: Converting rCorrector outputs into a format compatible with trinity 
#
# I used a Harvard script to convert rCorrector into a form readable by Trinity (https://informatics.fas.harvard.edu/best-practices-for-de-novo-transcriptome-assembly-with-trinity.html) 
# The rest of this section is taken directly from Matthew's GitHub (https://github.com/HaleDM/Alligator_Denovo/blob/master/Denovo_assembly_pipeline.txt)
#
#It is usable in the command line by:
>python FilterUncorrectabledPEfastq.py -1 $1 -2 $2 -o fixed 2>&1 > rmunfixable_$r1.out
#Where $1 is the name of your forward read and $2 is the name of your reverse read
#-o will add the following string as a prefix to the output file (left as "fixed")
#What follows ">" is the name for a log file just just tells the number of processed reads
#Python script is pasted below
"""
author: adam h freedman
afreedman405 at gmail.com
data: Fri Aug 26 10:55:18 EDT 2016
This script takes as an input Rcorrector error corrected Illumina paired-reads
in fastq format and:
1. Removes any reads that Rcorrector indentifes as containing an error,
but can't be corrected, typically low complexity sequences. For these,
the header contains 'unfixable'.
2. Strips the ' cor' from headers of reads that Rcorrector fixed, to avoid
issues created by certain header formats for downstream tools.
3. Write a log with counts of (a) read pairs that were removed because one end
was unfixable, (b) corrected left and right reads, (c) total number of
read pairs containing at least one corrected read.
Currently, this script only handles paired-end data, and handle either unzipped
or gzipped files on the fly, so long as the gzipped files end with 'gz'.
"""

import sys        
import gzip
from itertools import izip,izip_longest
import argparse
from os.path import basename

def get_input_streams(r1file,r2file):
    if r1file[-2:]=='gz':
        r1handle=gzip.open(r1file,'rb')
        r2handle=gzip.open(r2file,'rb')
    else:
        r1handle=open(r1file,'r')
        r2handle=open(r2file,'r')
    
    return r1handle,r2handle
        
        
def grouper(iterable, n, fillvalue=None):
    "Collect data into fixed-length chunks or blocks"
    # grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx
    args = [iter(iterable)] * n
    return izip_longest(fillvalue=fillvalue, *args)  
    

if __name__=="__main__": 
    parser = argparse.ArgumentParser(description="options for filtering and logging rCorrector fastq outputs")
    parser.add_argument('-1','--left_reads',dest='leftreads',type=str,help='R1 fastq file')
    parser.add_argument('-2','--right_reads',dest='rightreads',type=str,help='R2 fastq file')
    parser.add_argument('-o','--out_prefix',dest='outprefix',type=str,help="prefix for filtered fastq output")
    opts = parser.parse_args()

    r1out=open(opts.outprefix+'_'+basename(opts.leftreads).replace('.gz',''),'w')
    r2out=open(opts.outprefix+'_'+basename(opts.rightreads).replace('.gz','') ,'w')

    r1_cor_count=0
    r2_cor_count=0
    pair_cor_count=0
    unfix_count=0   

    r1_stream,r2_stream=get_input_streams(opts.leftreads,opts.rightreads)

    with r1_stream as f1, r2_stream as f2:
        R1=grouper(f1,4)
        R2=grouper(f2,4)
        counter=0
        for entry in R1:
            counter+=1
            if counter%100000==0:
                print "%s reads processed" % counter
        
            head1,seq1,placeholder1,qual1=[i.strip() for i in entry]
            head2,seq2,placeholder2,qual2=[j.strip() for j in R2.next()]
            
            if 'unfixable' in head1 or 'unfixable' in head2:
                unfix_count+=1
            else:
                if 'cor' in head1:
                    r1_cor_count+=1
                if 'cor' in head2:
                    r2_cor_count+=1
                if 'cor' in head1 or 'cor' in head2:
                    pair_cor_count+=1
                
                head1=head1.split('l:')[0][:-1] # keeps all before the low kmer count statistic and removes the trailing whitespace character
                head2=head2.split('l:')[0][:-1] 
                #head1=head1.replace(' cor','')
                #head2=head2.replace(' cor','')
                r1out.write('%s\n' % '\n'.join([head1,seq1,placeholder1,qual1]))
                r2out.write('%s\n' % '\n'.join([head2,seq2,placeholder2,qual2]))

    unfix_log=open('rmunfixable.log','w')
    unfix_log.write('total PE reads:%s\nremoved PE reads:%s\nretained PE reads:%s\nR1 corrected:%s\nR2 corrected:%s\npairs corrected:%s\n' % (counter,unfix_count,counter-unfix_count,r1_cor_count,r2_cor_count,pair_cor_count))
            
    r1out.close()
    r2out.close() 
#The above script is being used in a local shell script (not run through cluster, just locally)
#Write and copy script to same directory as rCorrector Output
#
#---------------------------------------------------------------------------------
#
# Step 3: TrimGalore
#
# TrimGalore is a trimming software, which in addition to allowing you to edit the stringency and error rate,
# can produce a FastQC report. 
#


#PBS -S /bin/bash
#PBS -N TrimGalore2.0
#PBS -q batch
#PBS -l nodes=1:ppn=1:AMD
#PBS -l walltime=10:00:00
#PBS -l mem=10gb

cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor

mkdir TrimGalore_AllS3

cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor

module load Trim_Galore/0.4.5-foss-2016b

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L001_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L001_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L002_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L002_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L003_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L003_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L004_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-1_S27_L004_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L001_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L001_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L002_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L002_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L003_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L003_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L004_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-2_S20_L004_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L001_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L001_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L002_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L002_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L003_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L003_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L004_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-3_S1_L004_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L001_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L001_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L002_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L002_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L003_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L003_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L004_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-4_S24_L004_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L001_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L001_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L002_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L002_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L003_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L003_R2_001.cor.fq

trim_galore --fastqc --fastqc_args "--outdir  /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 -f fastq" -stringency 3 -o /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3 --paired /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L004_R1_001.cor.fq /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/fixed_opacum-5_S16_L004_R2_001.cor.fq

#---------------------------------------------------------------------------------


# Step 4: Concatenation. 
# Trimmed fastqs were concatenated together before assembly with the following script. 
# Failure to cat together files resulted an assembly with unusually large N50s. 

#PBS -S /bin/bash
#PBS -N Trinity_Assembly1.2
#PBS -q highmem_q
#PBS -l nodes=1:ppn=16
#PBS -l walltime=800:00:00
#PBS -l mem=100gb

cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed


cat fixed_opacum-1_S27_L001_R2_001.cor_val_2.fq fixed_opacum-1_S27_L002_R2_001.cor_val_2.fq fixed_opacum-1_S27_L003_R2_001.cor_val_2.fq fixed_opacum-1_S27_L004_R2_001.cor_val_2.fq > fixed_opacum1_R2.cor.fq
cat fixed_opacum-2_S20_L001_R2_001.cor_val_2.fq fixed_opacum-2_S20_L002_R2_001.cor_val_2.fq fixed_opacum-2_S20_L003_R2_001.cor_val_2.fq fixed_opacum-2_S20_L004_R2_001.cor_val_2.fq > fixed_opacum2_R2.cor.fq
cat fixed_opacum-3_S1_L001_R2_001.cor_val_2.fq fixed_opacum-3_S1_L002_R2_001.cor_val_2.fq fixed_opacum-3_S1_L003_R2_001.cor_val_2.fq fixed_opacum-3_S1_L004_R2_001.cor_val_2.fq > fixed_opacum3_R2.cor.fq
cat fixed_opacum-4_S24_L001_R2_001.cor_val_2.fq fixed_opacum-4_S24_L002_R2_001.cor_val_2.fq fixed_opacum-4_S24_L003_R2_001.cor_val_2.fq fixed_opacum-4_S24_L004_R2_001.cor_val_2.fq > fixed_opacum4_R2.cor.fq
cat fixed_opacum-5_S16_L001_R2_001.cor_val_2.fq fixed_opacum-5_S16_L002_R2_001.cor_val_2.fq fixed_opacum-5_S16_L003_R2_001.cor_val_2.fq fixed_opacum-5_S16_L004_R2_001.cor_val_2.fq > fixed_opacum5_R2.cor.fq


#---------------------------------------------------------------------------------

# Step 4: Trinity 
#
#
# Trinity used for de novo transcriptome assembly. 
#
# (https://github.com/trinityrnaseq/trinityrnaseq/wiki)
#
#PBS -S /bin/bash

#PBS -N Trinity_Assembly1.2

#PBS -q highmem_q

#PBS -l nodes=1:ppn=16

#PBS -l walltime=800:00:00

#PBS -l mem=100gb




cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat

module load Trinity/2.6.6-foss-2016b

Trinity --seqType fq --max_memory 100G --CPU 8 --no_version_check --full_cleanup --normalize_reads --SS_lib_type RF --left fixed_opacum1_R1.cor.fq,fixed_opacum2_R1.cor.fq,fixed_opacum3_R1.cor.fq,fixed_opacum4_R1.cor.fq,fixed_opacum5_R1.cor.fq,fixed_opacum_7_S1_R1_001.cor_val_1.fq --right fixed_opacum1_R2.cor.fq,fixed_opacum2_R2.cor.fq,fixed_opacum3_R2.cor.fq,fixed_opacum4_R2.cor.fq,fixed_opacum5_R2.cor.fq,fixed_opacum_7_S1_R2_001.cor_val_2.fq --output /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/TrinityAssembly2



#---------------------------------------------------------------------------------

# Step 5: Quality Assessment
#
#
# Trinity was QA'd with the following scripts: An internal script in Trinity, HiSAT2, and # SAMtools. 
# HiSAT2 aligns sequence reads to long reference reads. 
# 



#PBS -S /bin/bash
#PBS -N TrinityAssembly_QualityAssessment1.0
#PBS -q batch
#PBS -l nodes=1:ppn=1
#PBS -l walltime=100:00:00
#PBS -l mem=10gb


cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/

module load Trinity/2.6.6-foss-2016b
/usr/local/apps/eb/Trinity/2.6.6-foss-2016b/trinityrnaseq-Trinity-v2.6.6/util/TrinityStats.pl TrinityAssembly2.Trinity.fasta > Trinity_FullAssembly.metrics


module load SAMtools/1.6-foss-2016b

cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/

/usr/local/apps/eb/Trinity/2.6.6-foss-2016b/trinityrnaseq-Trinity-v2.6.6/util/misc/SAM_nameSorted_to_uniq_count_stats.pl Trinity_FullAlignment_sorted.bam > /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/



#PBS -S /bin/bash
#PBS -q batch
#PBS -N jobname
#PBS -l nodes=1:ppn=4:AMD
#PBS -l walltime=480:00:00
#PBS -l mem=50gb

cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/

module load HISAT2/2.1.0-foss-2016b

hisat2-build -p 4 -f /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/TrinityAssembly2.Trinity.fasta  TA



#PBS -S /bin/bash
#PBS -N HiSatallign
#PBS -q batch
#PBS -l nodes=1:ppn=4
#PBS -l walltime=480:00:00
#PBS -l mem=50gb

mkdir /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/HiSAT2

cd /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/

module load HISAT2/2.1.0-foss-2016b

hisat2 -p 4 -x TA -1 fixed_opacum1_R1.cor.fq,fixed_opacum2_R1.cor.fq,fixed_opacum3_R1.cor.fq,fixed_opacum4_R1.cor.fq,fixed_opacum5_R1.cor.fq,fixed_opacum7_R1.cor.fq -2 fixed_opacum1_R2.cor.fq,fixed_opacum2_R2.cor.fq,fixed_opacum3_R2.cor.fq,fixed_opacum4_R2.cor.fq,fixed_opacum5_R2.cor.fq,fixed_opacum7_R2.cor.fq -S H.sam



# Results

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  150490
Total trinity transcripts:	244195
Percent GC: 46.48

########################################
Stats based on ALL transcript contigs:
########################################

        Contig N10: 7579
        Contig N20: 5446
        Contig N30: 4175
        Contig N40: 3095
        Contig N50: 2141

        Median contig length: 321
        Average contig: 785.91
        Total assembled bases: 191916257

#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################

        Contig N10: 6809
        Contig N20: 4819
        Contig N30: 3513
        Contig N40: 2453
        Contig N50: 1478

        Median contig length: 302
        Average contig: 678.32
        Total assembled bases: 102080495


Building a SMALL index
96120217 reads; of these
96120217 (100.00%) were paired; of these:
    95910642 (99.78%) aligned concordantly 0 times
    51816 (0.05%) aligned concordantly exactly 1 time
    157759 (0.16%) aligned concordantly >1 times
    ----
    95910642 pairs aligned concordantly 0 times; of these:
      8609030 (8.98%) aligned discordantly 1 time
    ----
    87301612 pairs aligned 0 times concordantly or discordantly; of these:
      174603224 mates make up the pairs; of these:
        27478994 (15.74%) aligned 0 times
        38739984 (22.19%) aligned exactly 1 time
        108384246 (62.07%) aligned >1 times
85.71% overall alignment rate

The following have been reloaded with a version change:
  1) SAMtools/1.3.1-foss-2016b => SAMtools/1.6-foss-2016b

/var/spool/torque/mom_priv/jobs/655566.sapelo2.SC: line 26: /scratch/wat28052/workDir/opacumRNAseq/opacumfastq/allfastq/rCorrector_Output/fixrcor/TrimGalore_AllS3/trimmed/cat/: Is a directory



#---------------------------------------------------------------------------------

# Step 6: Trinotate
#
# First you've got to download and format the databases for the different trinotate uses to annotate the assembly. 
# I was only able to get Blastx to work with trinotate, Blastp, SignalIP, TMMER, and HMMR I didn't get in the final SQLite file. 


# Downloads Uniprot database for Blast queries


#PBS -S /bin/bash
#PBS -N Blast_db1.2
#PBS -q batch
#PBS -l nodes=1:ppn=1:AMD
#PBS -l walltime=40:00:00
#PBS -l mem=20gb


module load BLAST+/2.6.0-foss-2016b-Python-2.7.14

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysi

wget "ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz"
gunzip uniprot_sprot.fasta.gz
makeblastdb -in uniprot_sprot.fasta -dbtype prot -out uniprot_sprot_database


# Broke assembly into 6 files (xaa,xab...etc) to make blast less computationally intestine


#PBS -S /bin/bash
#PBS -N j-blast_trn
#PBS -l nodes=1:ppn=4:AMD
#PBS -q highmem_q
#PBS -l walltime=100:00:00
#PBS -l mem=20gb

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis


module load BLAST+/2.7.1-foss-2016b-Python-2.7.14
blastx -num_threads 4 -query xaa -out Trinity_assembly_Blastx1 -db uniprot_sprot_database -outfmt 6 -evalue 0.0001

blastx -num_threads 4 -query xab -out Trinity_assembly_Blastx2 -db uniprot_sprot_database -outfmt 6 -evalue 0.0001

blastx -num_threads 4 -query xac -out Trinity_assembly_Blastx3 -db uniprot_sprot_database -outfmt 6 -evalue 0.0001

blastx -num_threads 4 -query xad -out Trinity_assembly_Blastx4 -db uniprot_sprot_database -outfmt 6 -evalue 0.0001

blastx -num_threads 4 -query xae -out Trinity_assembly_Blastx5 -db uniprot_sprot_database -outfmt 6 -evalue 0.0001

blastx -num_threads 4 -query xaf -out Trinity_assembly_Blastx6 -db uniprot_sprot_database -outfmt 6 -evalue 0.0001




#BlastP

#PBS -S /bin/bash
#PBS -N j_transdecoder
#PBS -q highmem_q
#PBS -l nodes=1:ppn=1:AMD
#PBS -l walltime=40:00:00
#PBS -l mem=100gb

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis

module load TransDecoder/2.1.0-foss-2016b-Perl-5.24.1

TransDecoder.LongOrfs -t xaa

TransDecoder.LongOrfs -t xab

TransDecoder.LongOrfs -t xac

TransDecoder.LongOrfs -t xad

TransDecoder.LongOrfs -t xae

TransDecoder.LongOrfs -t xaf


#PBS -S /bin/bash
#PBS -m ae
#PBS -N Blastp0_20k
#PBS -q batch
#PBS -l nodes=1:ppn=4:AMD
#PBS -l walltime=40:00:00
#PBS -l mem=50gb

module load BLAST+/2.6.0-foss-2016b-Python-2.7.14

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/

blastp -query /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir/longest_orfs.pep -db  /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/uniprot_sprot_database -out /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir/Trinity_assembly_Blastp0  -outfmt 6 -evalue 0.0001 -num_threads 4


# HMMER

# wget PFAM database from ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz

#PBS -S /bin/bash
#PBS -N HMMER0_20k.sh
#PBS -q batch
#PBS -l nodes=1:ppn=2:AMD
#PBS -l mem=40gb
#PBS -l walltime=23:00:00

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir
module load HMMER/3.1b2-foss-2016b
hmmpress /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/HMMER/Pfam-A.hmm
hmmscan --cpu 2 --tblout TrinotatePFAMxaa.out --domtblout TrinotateDomainsPFAMxaa.out /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/HMMER/Pfam-A.hmm /scratch/wat28052/workDir/opacumRNAseq/HMMER/transcriptome_analysis/xaa.transdecoder_dir/longest_orfs.pep




# SignalIP 

#PBS -S /bin/bash
#PBS -N TMHMM1.0
#PBS -q batch
#PBS -l nodes=1:ppn=1:AMD
#PBS -l walltime=480:00:00
#PBS -l mem=10gb

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir


module load SignalP/4.1f-foss-2016b
time signalp /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir/longest_orfs.pep


# THMM

#PBS -S /bin/bash
#PBS -N TMHMM1.0
#PBS -q batch
#PBS -l nodes=1:ppn=1:AMD
#PBS -l walltime=480:00:00
#PBS -l mem=10gb

cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir


module load TMHMM/2.0c-foss-2016b-Perl-5.24.1
tmhmm /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/xaa.transdecoder_dir/longest_orfs.pep




#PBS -S /bin/bash

#PBS -q batch

#PBS -N Trinotate1.3

#PBS -l nodes=1:ppn=1

#PBS -l walltime=40:00:00

#PBS -l mem=20 gb



cd /scratch/wat28052/workDir/opacumRNAseq/transcriptome_analysis/trinotate

module load Trinotate/3.1.1-foss-2016b

module load Perl/5.20.3-foss-2016b


Trinotate Trinotate_v3.sqlite init --gene_trans_map TrinityAssembly2.Trinity.fasta.gene_trans_map --transcript_fasta TrinityAssembly2.Trinity.fasta --transdecoder_pep longestorf.pep

Trinotate Trinotate_v3.sqlite init LOAD_swissprot_blastp  Blastpall

Trinotate Trinotate_v3.sqlite LOAD_swissprot_blastx  Blastcat

Trinotate Trinotate_v3.sqlite LOAD_pfam TrinotatePFAM.out

Trinotate Trinotate_v3.sqlite LOAD_tmhmm TMHMMout

Trinotate Trinotate_v3.sqlite LOAD_signalp SignalIPout

Trinotate Trinotate_v3.sqlite report > Trinotate.xls

run_TrinotateWebserver.pl 8080
